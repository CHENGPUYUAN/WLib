<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnContact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABSElEQVQ4T41SO04DMRCdjk8LdTgBBQKu
        gOgCBYgGvLuR6LhADkCTWyShQUJeJxItFURCVIGSnIADIJD4zIwntmd3iXjSW3nnvRl7xoY/cT5eh2y0
        C4Xb4fW/kZeHyAnyG/kjpPUEjD0QVwPM3TKarpKkZmblEC5ulyQrQT35FXJ76elmSqMiCv7YafIjHF2v
        iErzWMXYk/KodnzPUSzssSgRxp0oT+YevEATVgNzn3A6bnkxQedmg7Xo+4IzuwZ8TSHInEpKHbl7Vl5j
        t/Fo+EmDhd0Tex3G7SsvF0hbyMo3NbwqaJjk4QLzFghxiB/IKZo2vZCg47ZQewlzCEMk0JX4AlR5xjtV
        wVeZvodRWxQBPQ4vviN7+N/lXfLyntcU8xp5+pKVgJ5nLLKAdtD8lOegdnhnHFJIwjXHqsdeBLoduiZi
        mHYVAL+74xU5KIe+lwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnOpenLog.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABTElEQVQ4T5VTO04DMRCdIlegoyEX4AwI
        xE9I0NAhxbZWiCOkQYiOCkKDxBWQEtu5QIqUoUKCiIYjpEhBAwJmxt71Z2UET3pKdubNeGf8Flq4mHRA
        mH2QeoA0ngNQeo9zv0LpbZDmFfld4By55dUZlD3D5GckLhE1+tRXebiT4+Iv5FPzLMwb/i6bZ9L29KYr
        prnS156BMueck+YSeQXVeA2EPeZc0M3dTnhhTRA5PsTuR/yaMdVonXOxtmd36ZTbJCj1Ae6jD9LeJ+Qx
        MRdrhb2h5ekkyKKHFZDDLrMarvI4hLyBNKNCA3uH/xeOdurLCw3YMHEQRSXkDdwI6LA4+J8GtBd/jeSw
        usGJl7dBudDgOVib7BmM9I58LJByZKwP3N2GK67B9/0HK1OxNJWvykD2TMbJKOxL++QcNBc5jDZMn7K7
        5mvkTpi5BsAPee5YnGFOroIAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 4</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACyHTFgUe12YGHtijBh7Y4QYe2d0HHtiXBR3YYAkb2xwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAM8wEBx3XcgYe2N8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtjtBR/XjwAA
        AAAAAAAAAAAAAAAAAAAAAAAABh7YzQYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe
        2P8GHtj/AAAAAAAAAAAAAAAABR7XkwYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe
        2P8GHtj/Bh7Y/wYd1lgAAAAABx7WRAYe2P8GHtj/Bh7Y/wYe2P8GHthUBh7Y/wYe2P8GHtj/Bh7Y/wYe
        2FQGHtirBh7Y/wYe2P8GHtjfABzVEgUe15MGHtj/Bh7Y/wYe2P8GHthUAAAAAAYe2FQGHtj/Bh7Y/wYe
        2FQAAAAABh7YVAYe2P8GHtj/Bh7Y/wUe12YGHti5Bh7Y/wYe2P8GHtj/Bh7Y/wYe2FQAAAAABh7YVAYe
        2FQAAAAABh7YVAYe2P8GHtj/Bh7Y/wYe2P8GHtijBR7X6QYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7YVAAA
        AAAAAAAABh7YVAYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y4QUe1+kGHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe
        2FQAAAAAAAAAAAYe2FQGHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2OEGHti5Bh7Y/wYe2P8GHtj/Bh7Y/wYe
        2FQAAAAABh7YVAYe2FQAAAAABh7YVAYe2P8GHtj/Bh7Y/wYe2P8GHtijBR7XkwYe2P8GHtj/Bh7Y/wYe
        2FQAAAAABh7YVAYe2P8GHtj/Bh7YVAAAAAAGHthUBh7Y/wYe2P8GHtj/BR7XZgcf2UgGHtj/Bh7Y/wYe
        2P8GHtj/Bh7YVAYe2P8GHtj/Bh7Y/wYe2P8GHthUBh7YqwYe2P8GHtj/Bh7Y3wsh0xYAAAAABh7YpQYe
        2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wcd13IAAAAAAAAAAAAA
        AAAGHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2M0AM8wEAAAAAAAA
        AAAAAAAAAAAAAAce2m4GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wYe2P8GHtj/Bh7Y/wUe15MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABB7YOgUd2JUFHdi/BR3Y6wUe1+kGHti5BR7Xkwce1kQAAAAAAAAAAAAA
        AAAAAAAA/D8AAPAHAADAAwAAgAMAAIQhAAAOcQAAB+AAAAPAAAADwAAAB+AAAA5xAACEIQAAgAMAAMAD
        AADwBwAA+B8AAA==
</value>
  </data>
</root>